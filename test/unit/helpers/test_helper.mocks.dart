// Mocks generated by Mockito 5.4.4 from annotations
// in quizko/test/unit/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:convert' as _i5;
import 'dart:typed_data' as _i7;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:quizko/features/auth/data/models/user_model.dart' as _i3;
import 'package:quizko/features/auth/data/source/authentication_source.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_2 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i5.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i5.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i5.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i5.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<_i7.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i4.Future<_i7.Uint8List>.value(_i7.Uint8List(0)),
      ) as _i4.Future<_i7.Uint8List>);

  @override
  _i4.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i4.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthenticationSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationSource extends _i1.Mock
    implements _i8.AuthenticationSource {
  MockAuthenticationSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i3.UserModel> subscribeUser(_i3.UserModel? newUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeUser,
          [newUser],
        ),
        returnValue: _i4.Future<_i3.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #subscribeUser,
            [newUser],
          ),
        )),
      ) as _i4.Future<_i3.UserModel>);

  @override
  _i4.Future<_i3.UserModel> authenticate(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i3.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #authenticate,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i3.UserModel>);

  @override
  _i4.Future<String> forgotPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> verifyResetCode(
    String? email,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyResetCode,
          [
            email,
            token,
          ],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #verifyResetCode,
            [
              email,
              token,
            ],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> resetPassword(
    String? email,
    String? token,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            email,
            token,
            password,
          ],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #resetPassword,
            [
              email,
              token,
              password,
            ],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> updatePassword({
    required String? currentPassword,
    required String? password,
    required String? passwordConfirmation,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #currentPassword: currentPassword,
            #password: password,
            #passwordConfirmation: passwordConfirmation,
            #token: token,
          },
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #currentPassword: currentPassword,
              #password: password,
              #passwordConfirmation: passwordConfirmation,
              #token: token,
            },
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> verifyToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #verifyToken,
          [token],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #verifyToken,
            [token],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<_i3.UserModel> getCurrentUser(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [token],
        ),
        returnValue: _i4.Future<_i3.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #getCurrentUser,
            [token],
          ),
        )),
      ) as _i4.Future<_i3.UserModel>);

  @override
  _i4.Future<_i3.UserModel> updateUser({
    required _i3.UserModel? user,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [],
          {
            #user: user,
            #token: token,
          },
        ),
        returnValue: _i4.Future<_i3.UserModel>.value(_FakeUserModel_2(
          this,
          Invocation.method(
            #updateUser,
            [],
            {
              #user: user,
              #token: token,
            },
          ),
        )),
      ) as _i4.Future<_i3.UserModel>);

  @override
  _i4.Future<bool> logout(String? token) => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [token],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
